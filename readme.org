#+TITLE: Readme

* how to run code
#+BEGIN_SRC sh
 python3 -m venv env --upgrade-deps
 source env/bin/activate
 pip install -r requirements
#+END_SRC

* binance vision scraper
- gets spot klines data from https://data.binance.vision/

** how to use
#+BEGIN_SRC sh
python3 src/binance_vision_data_scraper/binance-vision-zips-download.py --pair ETHUSDC --interval 12h --output "/path/to/dir"
#+END_SRC

- pair examples:
  - ETHUSDC
  - LINKETH
  - BTCLTC
  - ...
- intervals:
  - 12h
  - 1d
  - 30min
  - 1w
  - ...
- output:
  - default: "./data/twitter/raw/PAIR-INTERVAL"

* twitter scraper
** how to use (linux)
- acquire API key and save in ./src/twitter_scraper/twitter_authenticaion.py
- edit query, token_symbol, start / end date in ./src/twitter_scraper/api_wrapper.py
#+BEGIN_SRC sh
python3 src/twitter_scraper/api_wapper.py
#+END_SRC

* tweet preprocessing
** contains utils for:
- aggregating tweets from csv to tokenized corpus
- adding preprocessed column to csv
- joining csv

*  lexical analysis
** contains utils for
- sampling csv for labelling/annotation purposes
- outputting file with frequent crypto words
- deriving vader scores from word frequencies in labelled data csv
- editing vader lexicon
- creating various plots for project report
- evaluating VADER classifier accuracy, plotting confusion matrix

* correlation analysis
** contains utils for
- creating csvs which temporally combine market and twitter data, averaging VADER scores for timeframes according to market candlesticks
- calculate crosscorrelation with time-lags, + plots
